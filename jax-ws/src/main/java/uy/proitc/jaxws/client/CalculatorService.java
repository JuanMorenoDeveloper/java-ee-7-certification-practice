package uy.proitc.jaxws.client;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.4.0 2020-09-25T11:02:50.016-03:00 Generated source
 * version: 3.4.0
 */
@WebServiceClient(name = "CalculatorService",
    wsdlLocation = "classpath:calculator.wsdl",
    targetNamespace = "http://jaxws.proitc.uy/wsdl")
public class CalculatorService extends Service {

  public final static URL WSDL_LOCATION;

  public final static QName SERVICE = new QName("http://jaxws.proitc.uy/wsdl", "CalculatorService");
  public final static QName CalculatorPort = new QName("http://jaxws.proitc.uy/wsdl",
      "CalculatorPort");

  static {
    URL url = CalculatorService.class.getClassLoader().getResource("calculator.wsdl");
    if (url == null) {
      java.util.logging.Logger.getLogger(CalculatorService.class.getName())
          .log(java.util.logging.Level.INFO,
              "Can not initialize the default wsdl from {0}", "classpath:calculator.wsdl");
    }
    WSDL_LOCATION = url;
  }

  public CalculatorService(URL wsdlLocation) {
    super(wsdlLocation, SERVICE);
  }

  public CalculatorService(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  public CalculatorService() {
    super(WSDL_LOCATION, SERVICE);
  }

  public CalculatorService(WebServiceFeature... features) {
    super(WSDL_LOCATION, SERVICE, features);
  }

  public CalculatorService(URL wsdlLocation, WebServiceFeature... features) {
    super(wsdlLocation, SERVICE, features);
  }

  public CalculatorService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
    super(wsdlLocation, serviceName, features);
  }


  /**
   * @return returns Calculator
   */
  @WebEndpoint(name = "CalculatorPort")
  public Calculator getCalculatorPort() {
    return super.getPort(CalculatorPort, Calculator.class);
  }

  /**
   * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.
   * Supported features not in the <code>features</code> parameter will have their default values.
   * @return returns Calculator
   */
  @WebEndpoint(name = "CalculatorPort")
  public Calculator getCalculatorPort(WebServiceFeature... features) {
    return super.getPort(CalculatorPort, Calculator.class, features);
  }

}
